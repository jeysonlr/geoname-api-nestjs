# version: '3'

# services:
#   api:
#     image: geoname-api
#     build: ./.docker
#     container_name: geoname-api
#     command: bash -c "yarn && yarn start"
#     restart: always
#     volumes:
#       - .:/var/www/html
#     working_dir: '/var/www/html'
#     ports:
#       - '7000:7000'
#     environment:
#         SEQ_DB: geoname
#         SEQ_USER: username
#         SEQ_PW: pgpassword
#         PORT: 4242
#         # DATABASE_URL: postgres://username:pgpassword@127.0.0.1:5432/mydatabase
#         DATABASE_URL: "postgres://username:pgpassword@postgres:5432/geoname"

#   postgres:
#     image: postgres:13.1-alpine
#     container_name: postgresdb
#     restart: always
#     # env_file:
#     #   - .env
#     environment:
#       POSTGRES_USER: username
#       POSTGRES_PASSWORD: pgpassword
#       POSTGRES_DB: geoname
#     #   PGDATA: /var/lib/postgresql/data/pgdata
#     # volumes:
#     #   - ./volumes/postgresdb:/data/db
#     # networks:
#     #   geoname-network:
#     #     ipv4_address: 1.0.0.3

# # networks:
# #   geoname-network:
# #     driver: bridge
# #     external: false
# #     ipam:
# #       config:
# #         - subnet: 1.0.0.0/24

version: '3.1'

services:
  # api:
  #   image: geoname-api
  #   build: ./.docker
  #   container_name: geoname-api
  #   command: bash -c "yarn && yarn start"
  #   restart: always
  #   volumes:
  #   - .:/var/www/html
  #   working_dir: '/var/www/html'
  #   ports:
  #   - '7000:7000'

  database:
    container_name: postgres-geoname
    # image: postgres
    image: postgres:13.1-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: geoname
      POSTGRES_USER: Jeyson
      POSTGRES_PASSWORD: jlr252525



# use docker-compose up -d
# caso n√£o funcionar utilize o comando abaixo
# docker run --name gostack_postgres -e POSTGRES_PASSWORD=docker POSTGRES_DB=gostack_gobarber -p 5432:5432 -d postgres
